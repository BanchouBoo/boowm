#!/bin/sh

right() {
	pa_x=$((a_x + a_w))
	pa_y=$((a_y + (a_h / 2)))

	pb_x=$b_x
	pb_y=$((b_y + (b_h / 2)))

	x_diff=$((pb_x - pa_x))
	[ "$x_diff" -le "-$a_w" ] && return
	y_diff=$((pa_y - pb_y))

	dist_sq=$((
		(x_diff * x_diff) +
		(y_diff * y_diff)
	))

	if [ "$dist_sq" -lt "$smallest_diff" ] || [ "$smallest_diff" -lt 0 ]; then
		smallest_diff=$dist_sq
		nearest_wid=$wid
	fi
}

left() {
	pa_x=$a_x
	pa_y=$((a_y + (a_h / 2)))

	pb_x=$((b_x + b_w))
	pb_y=$((b_y + (b_h / 2)))

	x_diff=$((pb_x - pa_x))
	[ "$x_diff" -ge "$a_w" ] && return
	y_diff=$((pa_y - pb_y))

	dist_sq=$((
		(x_diff * x_diff) +
		(y_diff * y_diff)
	))

	if [ "$dist_sq" -lt "$smallest_diff" ] || [ "$smallest_diff" -lt 0 ]; then
		smallest_diff=$dist_sq
		nearest_wid=$wid
	fi
}

up() {
	pa_x=$((a_x + (a_w / 2)))
	pa_y=$a_y

	pb_x=$((b_x + (b_w / 2)))
	pb_y=$((b_y + b_h))

	x_diff=$((pb_x - pa_x))
	y_diff=$((pa_y - pb_y))
	[ "$y_diff" -le "-$a_h" ] && return

	dist_sq=$((
		(x_diff * x_diff) +
		(y_diff * y_diff)
	))

	if [ "$dist_sq" -lt "$smallest_diff" ] || [ "$smallest_diff" -lt 0 ]; then
		smallest_diff=$dist_sq
		nearest_wid=$wid
	fi
}

down() {
	pa_x=$((a_x + (a_w / 2)))
	pa_y=$((a_y + a_h))

	pb_x=$((b_x + (b_w / 2)))
	pb_y=$b_y

	x_diff=$((pb_x - pa_x))
	y_diff=$((pa_y - pb_y))
	[ "$y_diff" -ge "$a_h" ] && return

	dist_sq=$((
		(x_diff * x_diff) +
		(y_diff * y_diff)
	))

	if [ "$dist_sq" -lt "$smallest_diff" ] || [ "$smallest_diff" -lt 0 ]; then
		smallest_diff=$dist_sq
		nearest_wid=$wid
	fi
}

source_wid=$1
[ "$source_wid" = "focused" ] && read -r source_wid < "$X11FS/focused"
dir=$2

read -r a_w a_h a_x a_y < "$X11FS/$source_wid/geometry/all"
smallest_diff=-1
nearest_wid=""
for wid in "$X11FS"/0x*; do
	wid=${wid##*/}

	[ "$wid" = "$source_wid" ] && continue
	read -r ignored < "$X11FS/$wid/ignored"
	$ignored && continue
	read -r mapped < "$X11FS/$wid/mapped"
	$mapped || continue

	read -r b_w b_h b_x b_y < "$X11FS/$wid/geometry/all"
	case $dir in
		left|west)
			left
			;;
		right|east)
			right
			;;
		up|north)
			up
			;;
		down|south)
			down
			;;
	esac
done

printf '%s\n' "$nearest_wid"
