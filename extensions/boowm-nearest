#!/bin/sh

mapped_windows() {
	for win in "$X11FS"/0x*; do
		read -r ignored < "$win/ignored"
		$ignored && continue
		read -r mapped < "$win/mapped"
		$mapped || continue

		printf '%s\n' "${win##*/}"
	done
}

source_wid=$1
[ "$source_wid" = "focused" ] && read -r source_wid < "$X11FS/focused"
dir=$2

update_nearest() {
	main_axis_a=$1
	main_axis_b=$2
	alt_axis_a=$3
	alt_axis_b=$4

	main_diff=$(($main_axis_a - $main_axis_b))
	[ "$main_diff" -le 0 ] && return
	if [ "$main_diff" -lt "$smallest_diff" ] || [ "$smallest_diff" -lt 0 ]; then
		smallest_diff=$main_diff
		nearest_wid=$wid
	elif [ "$main_diff" -eq "$smallest_diff" ]; then
		read -r alt_axis_n < "$X11FS/$nearest_wid/geometry/${alt_axis_a#*_}"
		alt_diff=$(($alt_axis_a - $alt_axis_b))
		alt_diff=${alt_diff#-}
		other_alt_diff=$(($alt_axis_a - alt_axis_n))
		other_alt_diff=${other_alt_diff#-}
		[ "$alt_diff" -lt "$other_alt_diff" ] && nearest_wid=$wid
	fi
}

read -r a_x a_y < "$X11FS/$source_wid/geometry/position"
smallest_diff=-1
nearest_wid=""
for wid in "$X11FS"/0x*; do
	wid=${wid##*/}

	[ "$wid" = "$source_wid" ]
	read -r ignored < "$X11FS/$wid/ignored"
	$ignored && continue
	read -r mapped < "$X11FS/$wid/mapped"
	$mapped || continue

	read -r b_x b_y < "$X11FS/$wid/geometry/position"
	case $dir in
		left|west)
			update_nearest a_x b_x a_y b_y
			;;
		right|east)
			update_nearest b_x a_x a_y b_y
			;;
		up|north)
			update_nearest a_y b_y a_x b_x
			;;
		down|south)
			update_nearest b_y a_y a_x b_x
			;;
	esac
done

printf '%s\n' "$nearest_wid"
