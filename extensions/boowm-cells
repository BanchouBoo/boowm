#!/bin/sh

. "${XDG_CONFIG_HOME:-$HOME/.config}/boowm/settings"

read -r screen_width screen_height < "$X11FS/root/geometry/size"
: "${outer_gaps:=0}"
: "${win_gaps:=0}"
: "${bar_height:=0}"
: "${cells_x:=10}"
: "${cells_y:=10}"
screen_bounds_x=$((screen_width - (outer_gaps * 2) - win_gaps))
screen_bounds_y=$((screen_height - (outer_gaps * 2) - win_gaps - bar_height))
cell_width=$((screen_bounds_x / cells_x))
cell_height=$((screen_bounds_y / cells_y))

printf '%s\n' "$screen_bounds_x" "$cell_height" > "$HOME/stuff.txt"

clamp() {
	var=$1
	min=$2
	max=$3

	: $(($var = $var < min ? min : $var))
	: $(($var = $var > max ? max : $var))
}

pos() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	read -r win_w win_h o_x o_y < "$X11FS/$wid/geometry/all"
	read -r border < "$X11FS/$wid/border/width"

	x=$2
	cx=$((x / cell_width))
	max_cx=$((cells_x - ((win_w + (border * 2) + win_gaps) / cell_width)))
	clamp cx 0 "$max_cx"
	x=$((cx * cell_width))
	x=$((x + outer_gaps + win_gaps))

	y=$3
	cy=$((y / cell_height))
	max_cy=$((cells_y - ((win_h + (border * 2) + win_gaps) / cell_height)))
	clamp cy 0 "$max_cy"
	y=$((cy * cell_height))
	y=$((y + outer_gaps + bar_height + win_gaps))

	[ "$x" -ne "$o_x" ] || [ "$y" -ne "$o_y" ] &&
		boowm pos "$wid" "$x" "$y"
}

move() {
	wid=$1
	x=$(($2 * cell_width))
	y=$(($3 * cell_height))
	boowm move "$wid" "$x" "$y"
}

left() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	x=$outer_gaps
	printf '%s\n' "$x" > "$X11FS/$wid/geometry/x"
}

right() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	read -r win_w < "$X11FS/$wid/geometry/width"
	x=$((screen_bounds_x - win_w))
	printf '%s\n' "$x" > "$X11FS/$wid/geometry/x"
}

top() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	y=$outer_gaps
	printf '%s\n' "$y" > "$X11FS/$wid/geometry/y"
}

bottom() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	read -r win_h < "$X11FS/$wid/geometry/height"
	y=$((screen_bounds_y - win_h))
	printf '%s\n' "$y" > "$X11FS/$wid/geometry/y"
}

topleft() {
	wid=$1
	x=$outer_gaps
	y=$outer_gaps
	boowm pos "$wid" "$x" "$y"
}

bottomleft() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	x=$outer_gaps
	read -r win_h < "$X11FS/$wid/geometry/height"
	y=$((screen_bounds_y - win_h))
	boowm pos "$wid" "$x" "$y"
}

topright() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	read -r win_w < "$X11FS/$wid/geometry/width"
	x=$((screen_bounds_x - win_w))
	y=$outer_gaps
	boowm pos "$wid" "$x" "$y"
}

bottomright() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	read -r win_w win_h < "$X11FS/$wid/geometry/size"
	x=$((screen_bounds_x - win_w))
	y=$((screen_bounds_y - win_h))
	boowm pos "$wid" "$x" "$y"
}

center() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	screen_center_x=$((screen_width / 2))
	screen_center_y=$((screen_height / 2))
	read -r win_w win_h < "$X11FS/$wid/geometry/size"
	x=$((screen_center_x - (win_w / 2)))
	y=$((screen_center_y - (win_h / 2)))
	pos "$wid" "$x" "$y"
}

size() {
	wid=$1
	[ "$wid" = "focused" ] && read -r wid < "$X11FS/focused"
	read -r o_w o_h win_x win_y < "$X11FS/$wid/geometry/all"
	read -r border < "$X11FS/$wid/border/width"

	w=$(($2 - win_x + cell_width))
	cw=$((w / cell_width))
	clamp cw 1 "$cells_x"
	w=$((cw * cell_width))
	w=$((w - win_gaps - border * 2))

	h=$(($3 - win_y + cell_height))
	ch=$((h / cell_height))
	clamp ch 1 "$cells_y"
	h=$((ch * cell_height))
	h=$((h - win_gaps - border * 2))

	[ "$w" -ne "$o_w" ] || [ "$h" -ne "$o_h" ] &&
		boowm size "$wid" "$w" "$h"
}

stretch() {
	wid=$1
	w=$(($2 * cell_width))
	h=$(($3 * cell_height))
	boowm stretch "$wid" "$w" "$h"
}

events() {
	event=$1
	wid=$2
	boowm is_ignored "$wid" && exit
	case $event in
		CREATE)
			read -r w h x y < "$X11FS/$wid/geometry/all"
			pos "$wid" "$x" "$y"
			size "$wid" "$w" "$h"
			;;

	esac
}

act=$1
shift 1
if [ "$(command -v "$act")" = "$act" ]; then # function in script exists
	$act $*
fi
