#!/bin/sh
# TODO: Rewrite

tag_file="$TAGS/current"

die() {
	printf "[\033[0;31mERROR\033[0m] %s\n" "$*" >&2
	exit 1
}

usage() {
	cat << EOF
usage
EOF
	exit
}

get_bit() {
	e=$(($1 - 1))

	while [ "$e" -gt 0 ]; do
		[ "$bit" ] &&
			: $((bit *= 2)) ||
			bit=2
		: $((e -= 1))
	done

	[ "$bit" ] || bit=1
}

apply_mask() {
	printf '%d\n' "$1" > "$tag_file"
}

has_bit() {
	[ "$bit" ] || get_bit "$1"
	return $(((mask & bit) == 0))
}

set_bit() {
	get_bit "$1"
	apply_mask "$bit"
}

add_bit() {
	read -r mask < "$tag_file"
	get_bit "$1"
	has_bit || {
		: $((mask |= bit))
		apply_mask "$mask"
	}
}

rm_bit() {
	read -r mask < "$tag_file"
	get_bit "$1"
	has_bit && {
		: $((mask ^= bit))
		apply_mask "$mask"
	}
}

is_active() {
	read -r mask < "$tag_file"
	has_bit "$1"
}

win_is_active() {
	for tag in "$TAGS"/*/"$1"; do
		[ "$tag" = "$TAGS/*/$1" ] && return 1 # not in any tag
		tag=${tag%/*}
		tag=${tag##*/}
		is_active "$tag" && return 0 # in a focused tag
	done
	return 1 # not in a focused tag
}

map() {
	[ "${1#*\*}" != "$1" ] && return
	for wid_path; do
		printf '%s\n' "true" > "$wid_path/mapped" 2> /dev/null
	done
}

unmap() {
	[ "${1#*\*}" != "$1" ] && return
	for wid_path; do
		printf '%s\n' "false" > "$wid_path/mapped" 2> /dev/null
	done
}

add() {
	ln -sfT "$X11FS/$1" "$TAGS/$2/$1"
}

rm() {
	[ -d  "$TAGS/$2/$1" ] || return
	command rm "$TAGS/$2/$1"
	win_is_active "$1" || boowm map "$1" false
}

rm_from_all() {
	rm "$TAGS"/*/"$1"
}

move() {
	rm_from_all "$1"
	add "$1" "$2"
}

add_focus() {
	[ -d "$TAGS/$1" ] || die "Tag '$1' does not exist"
	add_bit "$1"
	map "$TAGS/$1"/*
}

rm_focus() {
	[ -d "$TAGS/$1" ] || die "Tag '$1' does not exist"
	rm_bit "$1"
	# unmap "$TAGS/$1"/*
	for win in "$TAGS/$1"/*; do
		[ "$win" = "$TAGS/$1/*" ] && continue
		win=${win##*/}
		# win_is_active "$win" || boowm map "$win" false
		win_is_active "$win" || boowm map "$win" false
		notify-send "$1"
	done
}

focus() {
	[ -d "$TAGS/$1" ] || die "Tag '$1' does not exist"
	read -r mask < "$tag_file"
	val=1
	index=1
	while [ "$val" -le "$mask" ]; do
		[ "$index" -eq "$1" ] || {
			[ $((val & mask)) -gt 0 ] &&
				unmap "$TAGS/$index"/*
		}
		: $((index+=1))
		: $((val*=2))
	done
	set_bit "$1"
	map "$TAGS/$1"/*
}

init() {
	[ "$1" -gt 0 ] && {
		printf '%d\n' "1" > "$tag_file"
		for tag in $(seq "$1"); do
			mkdir -p "$TAGS/$tag"
		done
	}
}

events() {
	event=$1
	wid=$2
	boowm is_ignored "$wid" && exit
	case $event in
		CREATE)
			read -r mask < "$tag_file"
			val=1
			index=1
			while [ "$val" -le "$mask" ]; do
				[ $((val & mask)) -gt 0 ] &&
					add "$wid" "$index"
				: $((index+=1))
				: $((val*=2))
			done
			;;

		DESTROY)
			remove_from_all "$wid"
			;;
	esac
}

act=$1
shift 1
if [ "$(command -V "$act")" = "$act is a shell function" ]; then # function in script exists
	$act $*
fi
